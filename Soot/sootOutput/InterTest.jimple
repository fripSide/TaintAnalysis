public class InterTest extends java.lang.Object
{

    public void <init>()
    {
        InterTest r0;

        r0 := @this: InterTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void invoke1(int, int)
    {
        java.io.PrintStream $r4, $r5;
        HelloWorld $r1, $r2;
        InterTest r0;
        int[] $r3;
        int i0, i1, $i2, i3, $i4, i5;
        float $f0, $f1;

        r0 := @this: InterTest;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + i1;

        i3 = $i2 + 0;

        $f0 = virtualinvoke r0.<InterTest: float invoke2(int)>(i3);

        $r1 = new HelloWorld;

        $i4 = (int) $f0;

        specialinvoke $r1.<HelloWorld: void <init>(int)>($i4);

        virtualinvoke $r1.<HelloWorld: void invoke3()>();

        $f1 = 2.0F * $f0;

        $r2 = specialinvoke r0.<InterTest: HelloWorld getClass(float)>($f1);

        virtualinvoke $r2.<HelloWorld: void invoke(int)>(i3);

        virtualinvoke $r2.<HelloWorld: void invoke3()>();

        $r3 = specialinvoke r0.<InterTest: int[] invoke4(int,HelloWorld)>(2, $r2);

        i5 = $r3[0];

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.Object)>($r3);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(int)>(i5);

        return;
    }

    private HelloWorld getClass(float)
    {
        InterTest r1;
        int $i0;
        float f0;
        HelloWorld $r0;

        r1 := @this: InterTest;

        f0 := @parameter0: float;

        $r0 = new HelloWorld;

        $i0 = (int) f0;

        specialinvoke $r0.<HelloWorld: void <init>(int)>($i0);

        return $r0;
    }

    private int[] invoke4(int, HelloWorld)
    {
        InterTest r2;
        int[] r0;
        int $i0, i1;
        HelloWorld r1;

        r2 := @this: InterTest;

        i1 := @parameter0: int;

        r1 := @parameter1: HelloWorld;

        r0 = newarray (int)[3];

        $i0 = virtualinvoke r1.<HelloWorld: int getField()>();

        r0[0] = $i0;

        r0[1] = i1;

        r0[2] = 0;

        return r0;
    }

    public float invoke2(int)
    {
        InterTest r0;
        int i0, $i1;
        float $f0;

        r0 := @this: InterTest;

        i0 := @parameter0: int;

        $i1 = i0 * i0;

        $f0 = (float) $i1;

        return $f0;
    }

    public static void main(java.lang.String[])
    {
        InterTest $r0;
        int $i0;
        java.lang.String[] r1;
        java.lang.String $r2;

        r1 := @parameter0: java.lang.String[];

        $r0 = new InterTest;

        specialinvoke $r0.<InterTest: void <init>()>();

        $r2 = r1[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r0.<InterTest: void invoke1(int,int)>($i0, 2);

        return;
    }
}
